{"version":3,"sources":["components/AppHeader/index.js","components/AppHeader/AppHeader.js","components/SearchPanel/index.js","components/SearchPanel/SearchPanel.js","components/TodoListFilter/index.js","components/TodoListFilter/TodoListFilter.js","components/TodoListItem/TodoListItem.js","components/TodoListItem/index.js","components/TodoList/index.js","components/TodoList/TodoList.js","components/ItemAddForm/index.js","components/ItemAddForm/ItemAddForm.js","components/App/index.js","components/App/App.js","index.js"],"names":["AppHeader","react_default","a","createElement","SearchPanel","state","searchText","onSearchChange","e","_this","setState","target","value","props","type","placeholder","onChange","this","Component","TodoListFilter","buttons","name","label","_this$props","onSetFilter","filter","map","_ref","classNames","key","className","onClick","library","add","faTrash","faCheck","faExclamation","TodoListItem","important","check","onDeleted","onToggleCheck","onToggleImportant","title","react_fontawesome_index_es","icon","size","color","TodoList","todoList","list","_ref2","id","Object","objectWithoutProperties","components_TodoListItem","assign","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","todoData","createItem","search","deleteItem","item","addItem","push","ToggleCheck","_ref3","ToggleImportant","_ref4","onFilterChange","text","filterList","searchInList","_ref5","toLowerCase","indexOf","_this2","_this$state","filteredList","visibleList","components_AppHeader","components_SearchPanel","components_TodoListFilter","components_TodoList","components_ItemAddForm","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.e9711dce.chunk.js","sourcesContent":["import AppHeader from './AppHeader';\r\n\r\nexport default AppHeader;","import React from 'react';\r\n\r\nimport './AppHeader.scss';\r\n\r\nconst AppHeader = () => {\r\n  return (\r\n    <header>\r\n      <h1>My ToDo Application</h1>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default AppHeader;","import SearchPanel from './SearchPanel';\r\n\r\nexport default SearchPanel;","import React, { Component } from 'react';\r\n\r\nimport './SearchPanel.scss';\r\n\r\nexport default class SearchPanel extends Component {\r\n  state = {\r\n    searchText: ''\r\n  }\r\n  onSearchChange = (e) => {\r\n    this.setState({\r\n      searchText: e.target.value\r\n    });\r\n    this.props.onSearchChange(e.target.value);\r\n  }\r\n  render() {\r\n    return (\r\n      <input\r\n        type=\"search\"\r\n        placeholder=\"type to search...\"\r\n        onChange={this.onSearchChange}\r\n        value={this.state.searchText}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import TodoListFilter from './TodoListFilter';\r\n\r\nexport default TodoListFilter;","import React, { Component } from 'react';\r\n\r\nimport './TodoListFilter.scss';\r\n\r\nclass TodoListFilter extends Component {\r\n  buttons = [\r\n    { name: 'all', label: 'All' },\r\n    { name: 'active', label: 'Active' },\r\n    { name: 'important', label: 'Important' },\r\n    { name: 'check', label: 'Check' },\r\n  ];\r\n\r\n  render() {\r\n    const { onSetFilter, filter } = this.props;\r\n\r\n    const buttons = this.buttons.map(({name, label}) => {\r\n      const classNames = name === filter ? 'btn active' : 'btn';\r\n      return (\r\n        <button\r\n          key={name}\r\n          name={name}\r\n          className={classNames}\r\n          onClick={() => onSetFilter(name)}\r\n        >\r\n          {label}\r\n        </button>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"item-filter\">\r\n        {buttons}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoListFilter;","import React from 'react';\r\n\r\nimport './TodoListItem.scss';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faCheck, faExclamation } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(faTrash);\r\nlibrary.add(faCheck);\r\nlibrary.add(faExclamation);\r\n\r\nconst TodoListItem = (props) => {\r\n  const { label, important, check, onDeleted, onToggleCheck, onToggleImportant} = props;\r\n\r\n  let classNames = \"item\";\r\n\r\n  if (important) {\r\n    classNames += ' important';\r\n  }\r\n  if (check) {\r\n    classNames += ' check';\r\n  }\r\n  return (\r\n    <li className={classNames}>\r\n      <h4>{label}</h4> \r\n      <div className=\"buttons\">\r\n        <button\r\n          className=\"btn btn-delete\"\r\n          title=\"delete\"\r\n          onClick={onDeleted}\r\n        >\r\n          <FontAwesomeIcon\r\n            className=\"icon\"\r\n            icon=\"trash\"\r\n            size=\"2x\"\r\n            color=\"#940000\"\r\n          />\r\n        </button>\r\n        <button\r\n          className=\"btn btn-important\"\r\n          title=\"important\"\r\n          onClick={onToggleImportant}\r\n        >\r\n          <FontAwesomeIcon\r\n            className=\"icon\"\r\n            icon=\"exclamation\"\r\n            size=\"2x\"\r\n            color=\"#ED7733\"\r\n          />\r\n        </button>\r\n        <button\r\n          className=\"btn btn-check\"\r\n          title=\"check\"\r\n          onClick={onToggleCheck}\r\n        >\r\n          <FontAwesomeIcon\r\n            className=\"icon\"\r\n            icon=\"check\"\r\n            size=\"2x\"\r\n            color=\"#009b00\"\r\n          />\r\n        </button>\r\n      </div>  \r\n    </li>\r\n  );\r\n}\r\n\r\nexport default TodoListItem;\r\n","import TodoListItem from './TodoListItem';\r\n\r\nexport default TodoListItem;","import TodoList from './TodoList';\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nimport './TodoList.scss';\r\nimport TodoListItem from '../TodoListItem';\r\n\r\nconst TodoList = (\r\n    {todoList, onDeleted, onToggleCheck, onToggleImportant}\r\n  ) => {\r\n  const list = todoList.map(({id, ...props}) => {\r\n    return (\r\n      <TodoListItem\r\n        key={id}\r\n        onDeleted={() => onDeleted(id)}\r\n        onToggleCheck={() => onToggleCheck(id)}\r\n        onToggleImportant={() => onToggleImportant(id)}\r\n        {...props}\r\n      />\r\n    );\r\n  });\r\n  return (\r\n    <ul className=\"todo-list\">\r\n      { list }\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default TodoList;","import ItemAddForm from './ItemAddForm';\r\n\r\nexport default ItemAddForm;","import React, { Component } from 'react';\r\n\r\nimport './ItemAddForm.scss';\r\n\r\nclass ItemAddForm extends Component {\r\n  state = {\r\n    label: ''\r\n  }\r\n  onLabelChange = (e) => {\r\n    this.setState({\r\n      label: e.target.value\r\n    });\r\n  };\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onItemAdded(this.state.label);\r\n    this.setState({\r\n      label: ''\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        className=\"add-form\"\r\n        onSubmit={this.onSubmit}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          name=\"input-add\"\r\n          placeholder=\"item name\" \r\n          onChange={this.onLabelChange}\r\n          value={this.state.label}\r\n        />\r\n        <button className=\"btn btn-add\">Add</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ItemAddForm;","import App from './App';\r\n\r\nexport default App;","import React, { Component } from 'react';\r\n\r\nimport '../../fonts/roboto.css';\r\nimport './App.scss';\r\n\r\nimport AppHeader from '../AppHeader';\r\nimport SearchPanel from '../SearchPanel';\r\nimport TodoListFilter from '../TodoListFilter';\r\nimport TodoList from '../TodoList';\r\nimport ItemAddForm from '../ItemAddForm';\r\n\r\nexport default class App extends Component {\r\n  id = 0;\r\n\r\n  state = {\r\n    todoData: [\r\n      this.createItem('Get job'),\r\n      this.createItem('Learn english'),\r\n      this.createItem('Wash plates')\r\n    ],\r\n    filter: 'all',\r\n    search: ''\r\n  };\r\n\r\n  createItem(label) {\r\n    return {\r\n      id: this.id++,\r\n      label,\r\n      important: false,\r\n      check: false\r\n    }\r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(({todoData}) => {\r\n      return {\r\n        todoData: todoData.filter(item => item.id !== id)\r\n      };\r\n    });\r\n  }\r\n\r\n  addItem = (label) => {\r\n    this.setState(({todoData}) => {\r\n      todoData.push(this.createItem(label));\r\n      return {\r\n        todoData\r\n      }\r\n    });\r\n  }\r\n\r\n  ToggleCheck = (id) => {\r\n    this.setState(({todoData}) => {\r\n      todoData.map(item => {\r\n        return item.id === id ? item.check = !item.check : item;\r\n      });\r\n\r\n      return {\r\n        todoData\r\n      };\r\n    });\r\n  }\r\n\r\n  ToggleImportant = (id) => {\r\n    this.setState(({todoData}) => {\r\n      todoData.map(item => {\r\n        return item.id === id ? item.important = !item.important : item;\r\n      });\r\n\r\n      return {\r\n        todoData\r\n      };\r\n    });\r\n  }\r\n\r\n  onFilterChange = filter => {\r\n    this.setState({\r\n      filter\r\n    });\r\n  }\r\n\r\n  onSearchChange = text => {\r\n    this.setState({\r\n      search: text\r\n    });\r\n  }\r\n  \r\n  filterList = (list, filter) => {\r\n    return list.filter(item => {\r\n      switch(filter) {\r\n        case 'active':\r\n          return !item.check;\r\n        case 'important':\r\n          return item.important;\r\n        case 'check':\r\n          return item.check;\r\n        default:\r\n          return item;\r\n      }\r\n    }); \r\n  }\r\n  searchInList = (list, search) => {\r\n    return list.filter(({label}) => {\r\n      return label.toLowerCase().indexOf(search.toLowerCase()) > -1;\r\n    });\r\n  }\r\n  render() {\r\n    const { todoData, filter, search } = this.state;\r\n    const filteredList = this.filterList(todoData, filter);\r\n    const visibleList = this.searchInList(filteredList, search);\r\n    return (\r\n      <main>\r\n        <AppHeader />\r\n        <SearchPanel onSearchChange={(text) => this.onSearchChange(text)} />\r\n        <TodoListFilter\r\n          filter={filter}\r\n          onSetFilter={(filter) => {this.onFilterChange(filter)}} \r\n        />\r\n        <TodoList\r\n          todoList={visibleList}\r\n          onDeleted={(id) => this.deleteItem(id)}\r\n          onToggleImportant={(id) => this.ToggleImportant(id)}\r\n          onToggleCheck={(id) => this.ToggleCheck(id)}\r\n        />\r\n        <ItemAddForm onItemAdded={(label) => this.addItem(label)} />\r\n      </main>\r\n    );\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}